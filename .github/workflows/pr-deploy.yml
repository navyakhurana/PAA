name: PR Deploy

on:
  # for local PR builds esp. builds in forked repositories
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed
  # for PR builds when the PR comes from a forked repository
  pull_request_target:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  build:
    name: Build Site for PR
    runs-on: ubuntu-latest
    # Note: only run when trigger is 'pull_request' in case pull request is from the same repo (see https://github.com/orgs/community/discussions/26829#discussioncomment-3253575)
    if: (github.event_name == 'pull_request_target' || github.event.pull_request.base.repo.full_name == github.event.pull_request.head.repo.full_name) && (github.event.pull_request.merged != true || github.event.pull_request.state != 'closed')
    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.sha}}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm

      - name: Install Dependencies
        run: npm ci

      # avoid hard-coding pages url in workflow => use github API to retrieve deployment website url (see https://stackoverflow.com/a/76354104/29917717)
      - name: Get pages deployment URL
        run: |
          pages_url=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
          url=$(echo $pages_url|cut -d'/' -f 1)//$(echo $pages_url|cut -d'/' -f 3)
          base_url=$(echo $pages_url|cut -d'/' -f 4)
          echo "url=$url" >> "$GITHUB_ENV"
          echo "base_url=$base_url" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Patch docusaurus.config.js for PR builds
        run: |
          sed -E -i "s^url:(..*)^url: '${{ env.url }}',^g" docusaurus.config.js
          sed -E -i "s^baseUrl:(..*)^baseUrl: '/${{ env.base_url }}/@${{ github.event.pull_request.head.ref }}',^g" docusaurus.config.js
          sed -E -i "s^title: 'Build resilient apps with SAP BTP',^title: 'Build resilient apps with SAP BTP (PR: #${PR_NUMBER})',^g" docusaurus.config.js
          sed -E -i "s^title: 'Develop a multitenant Software as a Service application in SAP BTP using CAP'^title: 'Develop a multitenant Software as a Service application in SAP BTP using CAP (PR: #${PR_NUMBER})'^g" docusaurus.config.js
          sed -E -i "s^logo: \{^logo: \{href: '${{ github.event.pull_request.html_url }}',^g" docusaurus.config.js
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Verify Patch Application
        run: cat docusaurus.config.js

      - name: Build Website
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    name: Deploy Website
    runs-on: ubuntu-latest
    needs: build
    # Note: only run when trigger is 'pull_request' in case pull request is from the same repo (see https://github.com/orgs/community/discussions/26829#discussioncomment-3253575)
    if: success() && (github.event_name == 'pull_request_target' || github.event.pull_request.base.repo.full_name == github.event.pull_request.head.repo.full_name) && (github.event.pull_request.merged != true || github.event.pull_request.state != 'closed')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.sha}}

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          path: build/

      - name: Set up Git
        env:
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER: ${{ secrets.GIT_USER }}
        run: |
          git config --global user.email "$$GIT_USER_EMAIL"
          git config --global user.name "$$GIT_USER"

      # avoid hard-coding pages url in workflow => use github API to retrieve deployment website url (see https://stackoverflow.com/a/76354104/29917717 + https://docs.github.com/en/rest/pages/pages?apiVersion=2022-11-28#get-a-github-pages-site)
      - name: Switch to GitHub Pages Branch
        run: |
          gh_pages_branch=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.source.branch')
          git fetch origin $gh_pages_branch
          git checkout $gh_pages_branch
          echo "gh_pages_branch=$gh_pages_branch" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup (Main Branch)
        if: github.ref == 'refs/heads/main'
        run: |
          shopt -s extglob
          rm -rf !(@*)

      - name: Cleanup (PR Branch)
        run: |
          rm -rf @${{ github.event.pull_request.head.ref }}
          mkdir @${{ github.event.pull_request.head.ref }}
      - name: Move Build Files
        run: |
          if [[ -d "build" && "$(ls -A build)" ]]; then
            if [[ "${{ github.event.pull_request.head.ref }}" != "refs/heads/main" ]]; then
              mv build/* @${{ github.event.pull_request.head.ref }}/
              cd @${{ github.event.pull_request.head.ref }}/
            else
              mv build/* ./
            fi
            tar -xvf github-pages/artifact.tar
            rm github-pages/artifact.tar
          else
            echo "No build files found. Skipping move step."
          fi

      - name: Commit and Push Changes
        run: |
          git add -A
          git commit --amend --no-edit || echo "No changes to commit"
          git push -f origin ${{ env.gh_pages_branch }}

  pr_comment:
    name: Post Preview Link (PRs)
    needs: deploy
    runs-on: ubuntu-latest
    # Note: only run when trigger is 'pull_request' in case pull request is from the same repo (see https://github.com/orgs/community/discussions/26829#discussioncomment-3253575)
    if: (github.event_name == 'pull_request_target' || github.event.pull_request.base.repo.full_name == github.event.pull_request.head.repo.full_name) && (github.event.pull_request.merged != true || github.event.pull_request.state != 'closed')
    permissions:
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Get pages deployment URL
        run: |
          echo "pages_url=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')" >> "$GITHUB_ENV"
      - name: Add PR Comment with Preview Link
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: "Preview website is available [here](${{ env.pages_url }}@${{ github.event.pull_request.head.ref }})."
        
  cleanup:
    name: Cleanup Merged PR
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event.pull_request.state == 'closed'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.sha}}

      - name: Set up Git
        env:
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER: ${{ secrets.GIT_USER }}
        run: |
          git config --global user.email "$$GIT_USER_EMAIL"
          git config --global user.name "$$GIT_USER"

      - name: Switch to GitHub Pages Branch
        run: |
          gh_pages_branch=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.source.branch')
          git fetch origin $gh_pages_branch
          git checkout $gh_pages_branch
          echo "gh_pages_branch=$gh_pages_branch" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Folder of Merged PR
        run: |
          rm -rf @${{ github.event.pull_request.head.ref }}

      - name: Commit and Push Changes
        run: |
          git add -A
          git commit -m "Cleanup: Removed folder @${{ github.event.pull_request.head.ref }} after merge" || echo "No changes to commit"
          git push origin ${{ env.gh_pages_branch }}
